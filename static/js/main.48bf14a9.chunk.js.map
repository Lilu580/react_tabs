{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","onTabSelected","selectedTabId","content","find","tab","id","className","map","isSelected","classNames","href","onClick","event","preventDefault","title","App","useState","setSelectedTabId","visibleTab","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAuB,SAAC,GAM/B,IAJFC,EAIC,EAJDA,KACAC,EAGC,EAHDA,cACAC,EAEC,EAFDA,cAGIC,EAAUH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,MAAkBF,EAAK,GAEnE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GACR,IAAMI,EAAaJ,EAAIC,KAAOH,EAAQG,GAEtC,OACE,oBACEC,UAAWG,IACT,CACE,YAAaD,IAGjB,UAAQ,MANV,SASE,mBACEE,KAAI,WAAMN,EAAIC,IACd,UAAQ,UACRM,QAAS,SAACC,GACRA,EAAMC,iBAEAL,GACJR,EAAcI,IAPpB,SAWGA,EAAIU,SAbFV,EAAIC,WAqBnB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAQA,cCjDJH,EAAO,CAClB,CAAEM,GAAI,QAASS,MAAO,QAASZ,QAAS,eACxC,CAAEG,GAAI,QAASS,MAAO,QAASZ,QAAS,eACxC,CAAEG,GAAI,QAASS,MAAO,QAASZ,QAAS,gBAG7Ba,EAAgB,WAC3B,MAA0CC,mBAASjB,EAAK,GAAGM,IAA3D,mBAAOJ,EAAP,KAAsBgB,EAAtB,KACMC,EAAanB,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,MAAkBF,EAAK,GAMtE,OACE,sBAAKO,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,0CACsBY,QADtB,IACsBA,OADtB,EACsBA,EAAYJ,SAGlC,cAAC,EAAD,CACEf,KAAMA,EACNC,cAZgC,SAACI,GACrCa,EAAiBb,EAAIC,KAYjBJ,cAAeA,QC3BvBkB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.48bf14a9.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Tab } from '../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  onTabSelected: (tab: Tab) => void\n  selectedTabId: string | undefined,\n};\n\nexport const Tabs:React.FC<Props> = (\n  {\n    tabs,\n    onTabSelected,\n    selectedTabId,\n  },\n) => {\n  const content = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const isSelected = tab.id === content.id;\n\n            return (\n              <li\n                className={classNames(\n                  {\n                    'is-active': isSelected,\n                  },\n                )}\n                data-cy=\"Tab\"\n                key={tab.id}\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={(event) => {\n                    event.preventDefault();\n\n                    if (!(isSelected)) {\n                      onTabSelected(tab);\n                    }\n                  }}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {content.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs/Tabs';\nimport { Tab } from './components/types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n  const visibleTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const selectTab: (tab: Tab) => void = (tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${visibleTab?.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        onTabSelected={selectTab}\n        selectedTabId={selectedTabId}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}